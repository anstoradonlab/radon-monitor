'It is intended to log the output of an ANSTO dual flow loop, two filter radon
'detector using a CR800 logger.
'Last modified: Scott Chambers, Feb-2007
'Added RTV table: S.Werczynski, Feb-2007
'Added RH/Temp and barometer sensors
'Added more variables (ULD, AirT) to RTV, and retained RTV for 30 minutes: Alan Griffiths, Apr 2022
'Changed cal factors for new T/RH and pressure sensors (factors for old sensors are commented out, RH cal is unchanged): Alan Griffiths, Oct 2023
'Changed T/RH/P sensors over to SDI-12 devices: Alan Griffiths, Jul 2024
'Changed differential pressure sensor to Nova NP785-20: Alan Griffiths, Jul 2024
'Changed flow sensor to Burkert Type 8745 with 0-5v analogue output: Alan Griffiths, July 2024
'Added unit declarations: Alan Griffiths, July 2024


'----- DECLARATIONS
PreserveVariables 

'SDI-12: raw sensor data
Public BaroVUE(3)
Public TRHData(2)

'SDI-12: SDI-12 sensor data, converted to usable variables
'  .. BaroVUE SDI-12 Barometer, with ancillary temperature and quality variables
Alias BaroVUE(1)=Pres
Alias BaroVUE(2)=BV_Temp
Alias BaroVUE(3)=BV_Qual
' .. HygroVUE T/RH sensor
Alias TRHData(1)=AirT
Alias TRHData(2)=RelHum

Public DaysInterval
Public TimeSet
Public CalDuration
Public rTime(9), TankP, HV
' Calibrated differential pressure, Pa, tank pressure referenced to ambient
Public TankPPa
Public ExFlow, LLD, ULD, Gas_meter, PanTemp, InFlow
Public BatV, Fract, flowcal
Public d24, t6, t7, IsCal,day_yr, CalDelay
Public now_d, now_h, now_m   ' day, hour, minute settings for Calibrate NOW
Public Flag(4) as Boolean  	'Flag(1) to set 24hr timer on C2, Flag(2) to set 6hr timer on C4, Flag(3) to start manual pump, Flag(4) to start manual inject
Public InTable as Boolean
Public AutoCal as Boolean

Alias rTime(1) = Year	'assign the alias Year to rTime(1)
Alias rTime(2) = Month	'assign the alias Month to rTime(2)
Alias rTime(3) = DayOfMonth	'assign the alias Day to rTime(3)
Alias rTime(4) = Hour	'assign the alias Hour to rTime(4)
Alias rTime(5) = Minute	'assign the alias Minute to rTime(5)
Alias rTime(6) = Second	'assign the alias Second to rTime(6)
Alias rTime(9) = DayOfYear	'assign the alias Day_of_Year to rTime(9)

Units ExFlow = slpm
Units InFlow = m/s
Units Gas_meter = mV
Units AirT = degC
Units RelHum = %
Units TankP = mV
Units TankPPa = Pa
Units Pres = hPa
Units HV = V
Units PanTemp = degC

'----- OUTPUT TABLE
DataTable(Results, true, -1)
  OpenInterval
  DataInterval(0,30,Min,10)
  Average (1, ExFlow,     IEEE4, 0)
  Average (1, InFlow, FP2, 0)
  Totalize(1, LLD,  IEEE4, 0)
  Totalize(1, ULD,  IEEE4, 0)
  Average (1, Gas_meter, IEEE4, 0)
  Average (1, AirT,   FP2, 0)
  Average (1, RelHum,   FP2, 0)
  Average (1, TankP,   FP2, 0)
  Average (1, TankPPa,   FP2, 0)
  Average (1, Pres,IEEE4, 0)
  Average (1, BV_Temp,FP2,False)
  Minimum (1, BV_Qual,FP2,False,False)
  Average (1, HV,         FP2, 0)
  Average (1, PanTemp,    FP2, 0)
  Average (1, BatV,       FP2, 0)

EndTable

DataTable(RTV,true,180)
  OpenInterval
  DataInterval(0,10,Sec,10)
  Sample(1, ExFlow,FP2)
  Sample (1, InFlow, FP2)
  Sample(1, LLD,IEEE4)
  Sample(1, ULD,IEEE4)
  Sample(1, Pres,IEEE4)
  Sample(1,BV_Temp,FP2)
  Sample(1,BV_Qual,FP2)
  Sample (1, TankP,FP2)
  Sample (1, TankPPa,FP2)
  Sample (1, HV,FP2)
  Sample (1, RelHum, FP2)
  Sample (1, AirT, FP2)
EndTable

' Convert from mV to Pascals for a Novus NPT785 differential pressure sensor
' Assumptions:
'		* device set to current output mode (4-20mA)
'   * Configured pressure range is -200Pa to +800Pa
'   * Terminating resistor is 120 ohm (chosen to be the same value as the
'     Vent Captor sensor)
Sub ConvertNPT785_mV_to_Pa(signal_mv, pressure_pa)
  Dim Imin,Imax,Pmin,Pmax, deltaP, deltaI,R
  ' min/max current in mA
  Imin = 4
  Imax = 20
  ' min/max presure in Pa
  Pmin = -200
  Pmax = 800
  deltaP = Pmax-Pmin
  deltaI = Imax-Imin
  ' terminating resitor
  R = 120
  pressure_pa = (signal_mv/R - Imin) * deltaP/deltaI + Pmin
EndSub


' Convert from mV to standard litres per minute
' Assumptions:
'   * device transmits analog signal (0-5000 mV)
'   * Configured flow range is flowMin - flowMax (set in subroutine)
Sub Convert_mV_to_slpm(signal_mv, flow_slpm)
  Dim mvMin, mvMax, flowMin, flowMax, delta_mv, delta_slpm
  ' min/max signal in mV
  mvMin = 0
  mvMax = 5000
  ' min/max presure in Pa
  flowMin= 0
  flowMax = 110
  delta_mv = mvMax - mvMin
  delta_slpm = flowMax - flowMin
	flow_slpm = (signal_mv - mvMin) * delta_slpm/delta_mv + flowMin
EndSub


'----- MAIN PROGRAM

BeginProg

	If DaysInterval = NaN OR DaysInterval = 0 Then
        DaysInterval = 28				' set calibration interval in days
	EndIf  
	If TimeSet = NaN OR TimeSet = 0 Then
        TimeSet = 10						' set time of the day
	EndIf
	If CalDuration = NaN OR CalDuration = 0 Then
        CalDuration = 6						' set duration of the calibration
	EndIf

	If CalDelay = NaN OR CalDelay = 0 Then
        CalDelay = 6						' set delay before the calibration
	EndIf
	
  If flowcal = NaN OR flowcal = 0 Then
    flowcal = 0.0667          ' If not already defined set flow calibration factor for 2L cyclic volume flow meter
  ENDIF 	

	InTable= false
      
  Scan(10,Sec, 3, 0)
    Battery(BatV)                                      ' Check logger power supply voltage (V)
    PanelTemp(PanTemp, 250)                            ' Check the panel temperature of the logger (C)
    ' mV output from Novus TP NP785-20 differential pressure sensor
    VoltSE(TankP, 1, mV2500, 1, False, 0, _60Hz, 1, 0)
    ConvertNPT785_mV_to_Pa(TankP, TankPPa)
    VoltSe(HV,    1, mV2500, 2, False, 0, _60Hz, 1, 0) ' Log the high voltage setting (V)
		' (SDI-12) Barometric Pressure Sensor measurements 'BV_BP', 'BV_Temp', and 'BV_Qual'
		SDI12Recorder(BaroVUE(),1,"1","M!",1,0,-1)
		'HygroVUE5/HygroVUE10 Digital Temperature & Relative Humidity Sensor measurements 'AirTC' and 'RH'
		SDI12Recorder(TRHData(),1,"0","M!",1,0,-1)
    VoltSe(InFlow,1,mV2500,6,False,0,_60Hz,.010417,-5) 		' Read flow rate through head #1 (cal assumes R=120ohms)     
    PulseCount(LLD, 1, 1, 0, 0, 1, 0)              ' Counts on lower level discriminator (raw radon)
    PulseCount(ULD, 1, 2, 0, 0, 1, 0)              ' Counts on upper level discriminator
    ' Burkert type 8745 mass flow sensor
    VoltSe(Gas_meter, 1,mV5000, 3,False,0,_60Hz,1,0)
    Convert_mV_to_slpm(Gas_meter, ExFlow)
    
    RealTime(rTime)
 	
    CallTable Results 
    CallTable RTV
  NextScan
EndProg
